
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix : <http://semex.sigmanoise.com/r3/life-sim#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#>.
@prefix diff: <http://www.w3.org/2004/delta#>.
@prefix var: <http://www.w3.org/2000/10/swap/var#>.


# 动作的后果是一个事件。
:求雨
    a   :动作;
    :条件  {:self :拥有天赋 :呼风唤雨};
    :描述  "祈求降雨";
    :后果  :下雨;
.

:跳过
    a   :动作;
    :条件 {};
    :参数 ();
    :描述 "什么都不做";
.

:抛硬币
    a   :动作;
    :条件   {};
    :参数   ();
    :描述   "抛一枚硬币";
    :后果分支 # 后果分支是一个列表，其中的项目是事件，或者是(事件 概率)的二元组。
        (
            [:变量替换 {:硬币 :tag :正面}] # tag是一个通用的谓词。
            [:变量替换 {:硬币 :tag :反面}]
        )
.


:加点
    a   :动作;
    :条件   {:self :可分配点数 ?x . # 用?...来表示变量
            ?x math:greaterThan 0 };
    :参数 ( # 可以将具体动作看作类，则它的参数就是其slot，实例就是具体的动作实例。
            [id :加点属性 :var ?加点属性; :取值范围 (:智力 :颜值 :体质 :家境);]
            [id :加点数值 :var ?加点数值;]
        ); 
    :变量增量   {:self ?加点属性 ?加点数值};
    :参数约束条件  
            {:self :可分配点数 ?x. ?加点属性 math:largerThan 0. ?加点属性 math:lessThan ?x},
            {?加点属性 list:in (:智力 :颜值 :体质 :家境)}; # 和用取值范围的写法等价。不过这里更一般。
.
#如果一个动作类型没有参数，那么其变量增量等影响直接传递给动作实例。否则需要计算。
{?a a :动作; :参数 (); :影响 ?y. ?x a ?a. } => {?x :影响 ?y}.

{?a :变量增量 ?g. ?g log:rawType log:Formula } => {?a :影响 (:变量增量 ?g)}. #语法糖？

# :加点数值 
#     :约束条件 [
#         a :Query;
#         :select ?y;
#         :where {:self :可分配点数 ?x. ?y math:largerThan 0. ?y math:lessThan ?x}
#         #:scope <base.n3>
# ]. # 和用参数约束的写法等价
#     :描述  [
#         a :Query;
#         :select ?message;
#         :where {:self :可分配点数 ?x. ("当前可分配点数为" ?x ) string:concatenation ?message} 
# ].

{:self :可分配点数 ?y. ("当前可分配点数为" ?y ) string:concatenation ?message} => {:加点数值 :提示信息 ?message.}.



:选择天赋
    a   :动作;
    :参数   (:所选天赋);
    :条件   {:self  :可选天赋数 ?x. ?x math:greaterThan 0};
    :变量增量   {:self :具有天赋 :所选天赋};
.

# 可选天赋的取值范围比较复杂，需要单独的规则来设定：
{ 
    ?SCOPE e:findall (
        ?x
        {?x a :天赋}
        ?y
    ) .
    (?y 3) :random-sample ?answer. #在所有的天赋中随机选取3个。
} => {:所选天赋 :取值范围 ?answer}.



# 动作的直接后果是一个diff图
# 理论上，应该是动作实例而不是动作类对应一个直接后果的diff图。因此应该使用规则，说明如何从动作类型和参数计算具体的动作实例的diff. 
# 下面计算的不是动作实例的直接后果，而是当前状态下的动作实例的直接后果。完全ground了。



:吃掉
    a   :动作;
    :参数   (:吃的对象);
    :条件   {:self  :拥有物品  :吃的对象. :吃的对象 a :食物};
    :语句移除  {:self  :拥有物品  :吃的对象};
.

:赠送
    a   :动作;
    :参数   (:赠送物 :赠送对象); #所有的参数都是临时变量。类似于 :赠送物 log:equalTo :苹果
    :条件   {:self  :拥有物品 :赠送物};
    :语句移除   {:self :拥有物品  :赠送物};
    :语句新增   {:赠送对象  :拥有物品  :赠送物};

.


:揍ta
    a   :动作;
    :参数 (:揍的对象);
    :描述 "你狠狠地揍了ta一拳";
    :条件 {:self :体质 ?x. ?x math:largerThan 5};
    :变量增量 {:揍的对象 :体质 -2};
.

:揍的对象 :取值范围 {}.
{?scope e:findall (?x {:self :认识的人 ?x} ?y)} => {:揍的对象 :取值范围 ?y}.

{?x a :动作. ?x :参数 ?l. ?y list:in ?l. } => {?y a :动作参数}.





